{"version":3,"file":"static/js/994.d3928142.chunk.js","mappings":"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","sources":["api/auth.js","api/queries.js","graphql/queries.js","pages/Layout/Layout.jsx"],"sourcesContent":["import { Auth as AmplifyAuth } from \"aws-amplify\";\n\nconst SignUp = async (email, password, locale) => {\n  await AmplifyAuth.signUp({\n    username: email,\n    password,\n    attributes: { email, locale },\n  });\n};\n\nconst ResendConfirmationCode = async (email) => {\n  await AmplifyAuth.resendSignUp(email);\n};\n\nconst ConfirmSignUp = async (email, code) => {\n  await AmplifyAuth.confirmSignUp(email, code);\n};\n\nconst SignIn = async (email, pwd, remember) => {\n  const auth = await AmplifyAuth.signIn(email, pwd);\n  if (auth.challengeName === \"NEW_PASSWORD_REQUIRED\")\n    await AmplifyAuth.completeNewPassword(auth, pwd);\n  if (remember) await AmplifyAuth.rememberDevice();\n  else await AmplifyAuth.forgetDevice();\n  return auth;\n};\n\nconst ForgotPassword = async (email) => {\n  await AmplifyAuth.forgotPassword(email);\n};\n\nconst RedefinePassword = async (email, code, pwd) => {\n  await AmplifyAuth.forgotPasswordSubmit(email, code, pwd);\n};\n\nconst GetUser = async () => {\n  const { attributes } = await AmplifyAuth.currentAuthenticatedUser();\n  return attributes;\n};\n\nconst SignOut = async () => {\n  await AmplifyAuth.signOut({ global: true });\n};\n\nconst ChangeEmail = async (email) => {\n  const user = await AmplifyAuth.currentAuthenticatedUser();\n  await AmplifyAuth.updateUserAttributes(user, { 'email': email });\n}\n\nconst ConfirmChangeEmail = async (code) => {\n  await AmplifyAuth.verifyCurrentUserAttributeSubmit('email', code);\n}\n\nconst ChangePassword = async (pwd, newPwd) => {\n  const user = await AmplifyAuth.currentAuthenticatedUser();\n  await AmplifyAuth.changePassword(user, pwd, newPwd);\n}\n\nconst ChangeLanguage = async (language) => {\n  const user = await AmplifyAuth.currentAuthenticatedUser();\n  await AmplifyAuth.updateUserAttributes(user, { 'locale': language });\n}\n\nconst Auth = {\n  SignUp,\n  ResendConfirmationCode,\n  ConfirmSignUp,\n  SignIn,\n  ForgotPassword,\n  RedefinePassword,\n  GetUser,\n  SignOut,\n  ChangeEmail,\n  ConfirmChangeEmail,\n  ChangePassword,\n  ChangeLanguage\n};\n\nexport default Auth;\n","import { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"../graphql/queries\";\n\nconst GetUserByEmail = async (email) => {\n  const data = await API.graphql(graphqlOperation(queries.userByEmail, { email }));\n  return data.data.userByEmail.items.length ? data.data.userByEmail.items[0] : null;\n};\n\nconst Queries = {\n  GetUserByEmail,\n};\n\nexport default Queries;\n\n\n","/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getUser = /* GraphQL */ `\n  query GetUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      locale\n      email\n      name\n      internalId\n      birthdate\n      gender\n      firstName\n      lastName\n      address\n      city\n      postalCode\n      province\n      country\n      phone\n      agreement\n      image\n      banking\n      transit\n      account\n      verified\n      export\n      ext\n      hotel\n      shortId\n      _version\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const listUsers = /* GraphQL */ `\n  query ListUsers(\n    $id: ID\n    $filter: ModelUserFilterInput\n    $limit: Int\n    $nextToken: String\n    $sortDirection: ModelSortDirection\n  ) {\n    listUsers(\n      id: $id\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      sortDirection: $sortDirection\n    ) {\n      items {\n        id\n        locale\n        email\n        name\n        internalId\n        birthdate\n        gender\n        firstName\n        lastName\n        address\n        city\n        postalCode\n        province\n        country\n        phone\n        agreement\n        image\n        banking\n        transit\n        account\n        verified\n        export\n        ext\n        hotel\n        shortId\n        _version\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getHotel = /* GraphQL */ `\n  query GetHotel($id: ID!) {\n    getHotel(id: $id) {\n      id\n      hotelID\n      locale\n      code\n      name\n      address\n      city\n      postalCode\n      province\n      country\n      phone\n      image\n      _version\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const listHotels = /* GraphQL */ `\n  query ListHotels(\n    $id: ID\n    $filter: ModelHotelFilterInput\n    $limit: Int\n    $nextToken: String\n    $sortDirection: ModelSortDirection\n  ) {\n    listHotels(\n      id: $id\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      sortDirection: $sortDirection\n    ) {\n      items {\n        id\n        hotelID\n        locale\n        code\n        name\n        address\n        city\n        postalCode\n        province\n        country\n        phone\n        image\n        _version\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const userByEmail = /* GraphQL */ `\n  query UserByEmail(\n    $email: AWSEmail!\n    $sortDirection: ModelSortDirection\n    $filter: ModelUserFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    userByEmail(\n      email: $email\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        locale\n        email\n        name\n        internalId\n        birthdate\n        gender\n        firstName\n        lastName\n        address\n        city\n        postalCode\n        province\n        country\n        phone\n        agreement\n        image\n        banking\n        transit\n        account\n        verified\n        export\n        ext\n        hotel\n        shortId\n        _version\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const locale = /* GraphQL */ `\n  query Locale(\n    $locale: String!\n    $sortDirection: ModelSortDirection\n    $filter: ModelHotelFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    locale(\n      locale: $locale\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        hotelID\n        locale\n        code\n        name\n        address\n        city\n        postalCode\n        province\n        country\n        phone\n        image\n        _version\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\n","import { useEffect, useState, useContext, useCallback } from \"react\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport { AppContext } from \"../../context\";\nimport { ROUTES, TYPES } from \"../../constants\";\nimport Auth from \"../../api/auth\";\nimport Queries from \"../../api/queries\";\nimport Mutations from \"../../api/mutations\";\nimport { Loading, Nav } from \"../../components\";\n\nexport default function Layout() {\n  const { state, dispatch } = useContext(AppContext);\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  const loadUser = useCallback(async ({force, email, locale}) => {\n    if (!state.user || force === true) {\n      let user = await Queries.GetUserByEmail(email);\n      if (!user) user = await Mutations.CreateUser(email, locale);\n      dispatch({ type: TYPES.UPDATE_LANG, payload: locale || user.locale });\n      dispatch({ type: TYPES.UPDATE_USER, payload: user });\n    }\n  }, []);\n\n  const handleSignOut = async () => {\n    await Auth.SignOut();\n    dispatch({ type: TYPES.UPDATE_LANG, payload: state.user.locale });\n    dispatch({ type: TYPES.UPDATE_USER, payload: null });\n    navigate(ROUTES[state.lang].SIGN_IN);\n  };\n\n  useEffect(() => {\n    const isUserLoggedIn = async () => {\n      try {\n        const attributes = await Auth.GetUser();\n        await loadUser({\n          email: attributes.email,\n          locale: attributes.locale,\n        });\n      } catch (error) {\n        navigate(ROUTES[state.lang].SIGN_IN);\n      }\n    };\n\n    isUserLoggedIn();\n  }, []);\n\n  if (!state.user) return <Loading />;\n\n  return (\n    <main className=\"mx-auto h-screen\">\n      {loading && <Loading />}\n      <Nav handleSignOut={handleSignOut} />\n      <div className=\"mx-auto max-w-screen-lg p-4\">\n        <Outlet context={{ loadUser, setLoading }} />\n      </div>\n    </main>\n  );\n}"],"names":["SignUp","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","password","locale","wrap","_context","prev","next","AmplifyAuth","signUp","username","attributes","stop","_x","_x2","_x3","apply","arguments","ResendConfirmationCode","_ref2","_callee2","_context2","resendSignUp","_x4","ConfirmSignUp","_ref3","_callee3","code","_context3","confirmSignUp","_x5","_x6","SignIn","_ref4","_callee4","pwd","remember","auth","_context4","signIn","sent","challengeName","completeNewPassword","rememberDevice","forgetDevice","abrupt","_x7","_x8","_x9","ForgotPassword","_ref5","_callee5","_context5","forgotPassword","_x10","RedefinePassword","_ref6","_callee6","_context6","forgotPasswordSubmit","_x11","_x12","_x13","GetUser","_ref7","_callee7","_yield$AmplifyAuth$cu","_context7","currentAuthenticatedUser","SignOut","_ref8","_callee8","_context8","signOut","global","ChangeEmail","_ref9","_callee9","user","_context9","updateUserAttributes","_x14","ConfirmChangeEmail","_ref10","_callee10","_context10","verifyCurrentUserAttributeSubmit","_x15","ChangePassword","_ref11","_callee11","newPwd","_context11","changePassword","_x16","_x17","ChangeLanguage","_ref12","_callee12","language","_context12","_x18","Auth","GetUserByEmail","data","API","graphql","graphqlOperation","userByEmail","items","length","Layout","_useContext","useContext","AppContext","state","dispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","loading","setLoading","loadUser","useCallback","force","Queries","Mutations","CreateUser","type","TYPES","UPDATE_LANG","payload","UPDATE_USER","handleSignOut","ROUTES","lang","SIGN_IN","useEffect","isUserLoggedIn","t0","_jsxs","className","children","_jsx","Loading","Nav","Outlet","context"],"sourceRoot":""}