{"version":3,"file":"static/js/485.b600d7b8.chunk.js","mappings":"uQASe,SAASA,IAAiB,IAADC,EAAAC,EAChCC,GAAWC,EAAAA,EAAAA,MACjBC,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAiCC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GACXI,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAArBF,MACRG,GACEC,EAAAA,EAAAA,MADMC,EAAMF,EAANE,OAAQC,EAAQH,EAARG,SAAUC,EAAsBJ,EAAtBI,uBAAwBC,EAAaL,EAAbK,cAElDC,GAA0BC,EAAAA,EAAAA,WAAiB,OAARhB,QAAQ,IAARA,GAAe,QAAPF,EAARE,EAAUM,aAAK,IAAAR,OAAP,EAARA,EAAiBmB,QAAS,IAAGC,GAAAb,EAAAA,EAAAA,GAAAU,EAAA,GAAzDE,EAAKC,EAAA,GAAEC,EAAQD,EAAA,GACtBE,GAAwBJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,IAEpBG,EAAAA,EAAAA,YAAU,WACNpB,EAAaqB,IAAI,UAAUN,EAASf,EAAaqB,IAAI,UACrDrB,EAAaqB,IAAI,SAASF,EAAQnB,EAAaqB,IAAI,QACxD,GAAG,CAACrB,KAEHoB,EAAAA,EAAAA,YAAU,WAAO,IAADE,EACdf,EAAOgB,EAAAA,GACPf,EAAiB,OAARZ,QAAQ,IAARA,GAAe,QAAP0B,EAAR1B,EAAUM,aAAK,IAAAoB,OAAP,EAARA,EAAiBE,MAC5B,GAAG,CAAS,OAAR5B,QAAQ,IAARA,GAAe,QAAPD,EAARC,EAAUM,aAAK,IAAAP,OAAP,EAARA,EAAiB6B,MAAOhB,EAAUD,IAKtC,OACEkB,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAACC,KAAMC,EAAAA,GAAU5B,EAAM6B,MAAMC,KAAKC,4BAC5CN,EAAAA,EAAAA,KAAA,OAAKO,UAAU,OAAMR,UACnBC,EAAAA,EAAAA,KAACQ,EAAAA,GAAK,CACJC,KAAK,QACLC,YAAaP,EAAAA,GAAU5B,EAAM6B,MAAMO,MACnCC,MAAO1B,EACP2B,QAASzB,OAGbY,EAAAA,EAAAA,KAAA,OAAKO,UAAU,OAAMR,UACnBC,EAAAA,EAAAA,KAACQ,EAAAA,GAAK,CACJC,KAAK,OACLC,YAAaP,EAAAA,GAAU5B,EAAM6B,MAAMU,KACnCF,MAAOrB,EACPsB,QAASrB,OAGbQ,EAAAA,EAAAA,KAAA,OAAKO,UAAU,qFAAoFR,UACjGC,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAASM,QAAS,kBAAMjC,EAAuBI,EAAM,EAACa,SAChEI,EAAAA,GAAU5B,EAAM6B,MAAMC,KAAKW,4BAGhChB,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,CACLf,KAAMC,EAAAA,GAAU5B,EAAM6B,MAAMC,KAAKa,0BACjCC,SA5BM,KAAVjC,KAAiBkC,EAAAA,EAAAA,IAAalC,IAAmB,KAATK,GAAeA,EAAK8B,OAAS,EA6BjER,QAAS,kBAAM9B,EAAcG,EAAOK,EAAK,EACzC+B,MAAI,KAENtB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,0BAAyBR,UACtCC,EAAAA,EAAAA,KAACuB,EAAAA,GAAQ,CACPrB,KAAMC,EAAAA,GAAU5B,EAAM6B,MAAMC,KAAKmB,aACjCC,GAAIC,EAAAA,GAAOnD,EAAM6B,MAAMuB,QACvBC,KAAK,WAKf,C","sources":["pages/auth/ConfirmSignUp.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState, useContext } from \"react\";\nimport { useOutletContext, useLocation, useSearchParams } from \"react-router-dom\";\nimport { AppContext } from \"../../context\";\nimport { LANGUAGES, ROUTES } from \"../../constants\";\nimport { isValidEmail } from \"../../helpers\";\nimport { AuthLink, AuthTitle, Button, Input } from \"../../components\";\nimport ConfirmSignUpImage from \"../../images/logo_tng.svg\";\n\nexport default function ConfirmSignUp() {\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n  const { state } = useContext(AppContext);\n  const { setImg, setAlert, resendConfirmationCode, confirmSignUp } =\n    useOutletContext();\n  const [email, setEmail] = useState(location?.state?.email || \"\");\n  const [code, setCode] = useState(\"\");\n\n  useEffect(() => {\n\t\tif (searchParams.get('email')) setEmail(searchParams.get('email'));\n\t\tif (searchParams.get('code')) setCode(searchParams.get('code'));\n\t}, [searchParams]);\n\n  useEffect(() => {\n    setImg(ConfirmSignUpImage);\n    setAlert(location?.state?.alert);\n  }, [location?.state?.alert, setAlert, setImg]);\n\n  const disabled = () =>\n    email === \"\" || !isValidEmail(email) || code === \"\" || code.length < 6;\n\n  return (\n    <form>\n      <AuthTitle text={LANGUAGES[state.lang].Auth.ConfirmRegistrationTitle} />\n      <div className=\"mb-4\">\n        <Input\n          type=\"email\"\n          placeholder={LANGUAGES[state.lang].Email}\n          value={email}\n          handler={setEmail}\n        />\n      </div>\n      <div className=\"mb-4\">\n        <Input\n          type=\"text\"\n          placeholder={LANGUAGES[state.lang].Code}\n          value={code}\n          handler={setCode}\n        />\n      </div>\n      <div className=\"mb-4 flex text-indigo-500 hover:text-amber-500 duration-200 transition ease-in-out\">\n        <button type=\"button\" onClick={() => resendConfirmationCode(email)}>\n          {LANGUAGES[state.lang].Auth.ResendConfirmationCode}\n        </button>\n      </div>\n      <Button\n        text={LANGUAGES[state.lang].Auth.ConfirmRegistrationButton}\n        disabled={disabled()}\n        handler={() => confirmSignUp(email, code)}\n        full\n      />\n      <div className=\"w-full text-center mt-6\">\n        <AuthLink\n          text={LANGUAGES[state.lang].Auth.BackToSignIn}\n          to={ROUTES[state.lang].SIGN_IN}\n          size=\"xl\"\n        />\n      </div>\n    </form>\n  );\n}\n"],"names":["ConfirmSignUp","_location$state","_location$state3","location","useLocation","_useSearchParams","useSearchParams","searchParams","_slicedToArray","state","useContext","AppContext","_useOutletContext","useOutletContext","setImg","setAlert","resendConfirmationCode","confirmSignUp","_useState","useState","email","_useState2","setEmail","_useState3","_useState4","code","setCode","useEffect","get","_location$state2","ConfirmSignUpImage","alert","_jsxs","children","_jsx","AuthTitle","text","LANGUAGES","lang","Auth","ConfirmRegistrationTitle","className","Input","type","placeholder","Email","value","handler","Code","onClick","ResendConfirmationCode","Button","ConfirmRegistrationButton","disabled","isValidEmail","length","full","AuthLink","BackToSignIn","to","ROUTES","SIGN_IN","size"],"sourceRoot":""}